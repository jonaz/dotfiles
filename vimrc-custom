colorscheme solarized
let g:airline_theme="solarized"
"let g:solarized_termcolors=256

set shiftwidth=4
set softtabstop=4
set tabstop=4
inoremap  { <C-R>=MasVinge()<CR>
func MasVinge()
    let col = col('.') - 1
    if getline('.')[col - 1] == ')'
        return "{\<CR>}\<C-O>\O"
    endif
    return '{'
endfunc


" map space to toggle fold or create new one in visual mode
nnoremap <silent> <Space> @=(foldlevel('.')?'za':"\<Space>")<CR>
vnoremap <Space> zf

" map ctrl+s to save and run sync_server
noremap <C-S> :wa<CR>:silent !sync_server<CR>:redraw!<CR>

" for fortnox
"au FileType php noremap <F3> :set list!<CR>
"au FileType php set nolist
"au FileType php set noexpandtab

"au FileType javascript set nolist
"au FileType javascript set noexpandtab

set nolist
set noexpandtab


"let g:vdebug_features = {
"\    'max_depth': 100,
"\    'max_children': 512
"\}
"let g:vdebug_options['server'] = '0.0.0.0'
"let g:vdebug_options['path_maps'] = {'/storage/vol3/utv.fortnox.local/jf/trunk': '/home/jonaz/svn/trunk/'}
let g:vdebug_options = {
\       "path_maps": {'/storage/vol3/trunk-jf': '/home/jonaz/svn/trunk'},
\       "server": '0.0.0.0',
\       "ide_key" : 'jf',
\       "break_on_open" : 0,
\}


let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
let g:UltiSnipsEditSplit="vertical"

"let g:UltiSnipsListSnippets = "<c-j>"

let g:ctrlp_max_files = 100000
let g:ctrlp_clear_cache_on_exit = 0

"phpdoc templates
let g:pdv_template_dir = $HOME ."/vim_phpdoc_templates"

"let g:syntastic_javascript_jshint_conf = "~/.jshintrc"
let g:syntastic_javascript_jshint_args = '--config ~/.jshintrc'

let g:syntastic_php_phpmd_post_args = "~/.phpmd-ruleset.xml"

nnoremap <C-k> :call pdv#DocumentCurrentLine()<CR>

" this algorithm works well for /** */ style comments in a tab-indented file
let g:airline#extensions#whitespace#mixed_indent_algo = 1


map <F2> :mksession! ~/.vim_session <cr> " Quick write session with F2
map <F3> :source ~/.vim_session <cr>     " And load session with F3

call pathogen#helptags()


map <Leader>gac :Gcommit -a -m ""<LEFT>
map <Leader>gc :Gcommit -m ""<LEFT>
map <Leader>gs :Gstatus<CR>
map <Leader>gb :Gblame<CR>

"nmap <leader>lw :CtrlP<CR><C-\>w

"function! ReplaceIt()
    "call inputsave()
    "let replacement = input('Enter replacement:')
    "call inputrestore()
    "execute '%s//'.replacement.'/g'
"endfunction
"nnoremap <leader>r :call ReplaceIt()<cr>

