#!/bin/bash
HAS_NVIM=false
VIM_COMMAND="vim"
if type "nvim" > /dev/null; then
	HAS_NVIM=true
	VIM_COMMAND="nvim"
fi

echo "Git pull"
git pull

#append custom bashrc
echo "Setting up bashrc"

git config --global credential.helper 'cache --timeout 3600'

grep -q ". $PWD/bashrc" ~/.bashrc || echo ". $PWD/bashrc" >> ~/.bashrc

if [ ! -L ~/.jshintrc ]; then
	echo "Setting up jshintrc"
    ln -s $PWD/jshintrc ~/.jshintrc
fi

if [ ! -L ~/bin/lockFuzzy ]; then
	echo "Installing lockFuzzy"
    ln -s $PWD/lockFuzzy ~/bin/lockFuzzy
fi

if [ ! -L ~/.phpmd-ruleset.xml ]; then
	echo "Setting up phpmd xml ruleset"
    ln -s $PWD/phpmd-ruleset.xml ~/.phpmd-ruleset.xml
fi

if [ ! -L ~/.dir_colors ]; then
	echo "Setting up dir_colors"
    ln -s $PWD/dir_colors ~/.dir_colors
fi


if [ ! -d ~/.vim/bundle/ ]; then
	mkdir -p ~/.vim/bundle
fi

if [ ! -d ~/.vim/bundle/vundle ]; then
	git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
fi


if [ ! -d ~/.fzf ]; then
	git clone https://github.com/junegunn/fzf.git ~/.fzf
	~/.fzf/install --all
fi

if [ ! -L ~/.vimrc-custom ]; then
    echo "Creating symbolic link ~/.vimrc-custom to $PWD/../vimrc-custom"
    ln -s $PWD/vimrc-custom ~/.vimrc-custom

fi

if [ ! -d ~/.config/nvim/ ]; then
	echo "Creating ~/.config/nvim"
	mkdir ~/.config/nvim/
fi

if [ ! -L ~/.config/nvim/init.vim ]; then
	echo "Creating symlink for vimrc to neovim init.vim"
	ln -s ~/.vimrc ~/.config/nvim/init.vim
fi



if [ ! -L ~/.vimrc ]; then
	if [ -f ~/.vimrc ]; then
		echo "~/.vimrc already exists, please remove or move"
		exit 1
	fi
    echo "Creating symbolic link ~/.vimrc to $PWD/vimrc"
    ln -s $PWD/vimrc ~/.vimrc
fi



echo "Installing plugins into vim"
nvim +PluginInstall +qall

echo "GoInstallBinaries"
nvim +GoInstallBinaries +qall

nvim +"call deoplete#sources#padawan#InstallServer()" +qa

echo "all Done!"

#TODO npm install in the bundle/tern_for_vim directory
